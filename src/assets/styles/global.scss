@use 'variables';
@use 'mixins';

// Reset and base styles
*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-family: variables.$font-family-sans;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--color-bg-primary);
  color: var(--color-text-primary);
  transition:
    background-color variables.$transition-normal,
    color variables.$transition-normal;
  min-height: 100vh;
}

// Typography
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 variables.$spacing-md 0;
  font-weight: variables.$font-weight-semibold;
  line-height: 1.2;
  color: var(--color-text-primary);
}

h1 {
  font-size: variables.$font-size-4xl;
  font-weight: variables.$font-weight-bold;

  @include mixins.respond-to(md) {
    font-size: 3rem;
  }
}

h2 {
  font-size: variables.$font-size-3xl;

  @include mixins.respond-to(md) {
    font-size: 2.5rem;
  }
}

h3 {
  font-size: variables.$font-size-2xl;
}

h4 {
  font-size: variables.$font-size-xl;
}

h5 {
  font-size: variables.$font-size-lg;
}

h6 {
  font-size: variables.$font-size-base;
}

p {
  margin: 0 0 variables.$spacing-md 0;
  color: var(--color-text-secondary);
}

a {
  color: var(--color-primary);
  text-decoration: none;
  transition: color variables.$transition-fast;

  &:hover {
    color: var(--color-primary-hover);
    text-decoration: underline;
  }

  @include mixins.focus-visible;
}

// Lists
ul,
ol {
  margin: 0 0 variables.$spacing-md 0;
  padding-left: variables.$spacing-lg;
}

li {
  margin-bottom: variables.$spacing-xs;
  color: var(--color-text-secondary);
}

// Code
code {
  font-family: variables.$font-family-mono;
  font-size: 0.9em;
  background-color: var(--color-bg-secondary);
  padding: variables.$spacing-xs variables.$spacing-sm;
  border-radius: variables.$border-radius-sm;
  border: 1px solid var(--color-border);
}

pre {
  font-family: variables.$font-family-mono;
  background-color: var(--color-bg-secondary);
  padding: variables.$spacing-md;
  border-radius: variables.$border-radius-md;
  border: 1px solid var(--color-border);
  overflow-x: auto;
  margin: 0 0 variables.$spacing-md 0;

  code {
    background: none;
    padding: 0;
    border: none;
  }
}

// Form elements
input,
textarea,
select {
  font-family: inherit;
  font-size: variables.$font-size-base;
  padding: variables.$spacing-sm variables.$spacing-md;
  border: 1px solid var(--color-border);
  border-radius: variables.$border-radius-md;
  background-color: var(--color-bg-primary);
  color: var(--color-text-primary);
  transition: border-color variables.$transition-fast;

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
  }

  &::placeholder {
    color: var(--color-text-tertiary);
  }
}

// Button reset
button {
  font-family: inherit;
  cursor: pointer;

  &:focus {
    outline: none;
  }
}

// Utility classes
.container {
  @include mixins.container;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.visually-hidden {
  @include mixins.visually-hidden;
}

.truncate {
  @include mixins.truncate;
}

// Layout helpers
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-sm {
  gap: variables.$spacing-sm;
}

.gap-md {
  gap: variables.$spacing-md;
}

.gap-lg {
  gap: variables.$spacing-lg;
}

// Margin and padding utilities
.m-0 {
  margin: 0;
}
.mt-sm {
  margin-top: variables.$spacing-sm;
}
.mt-md {
  margin-top: variables.$spacing-md;
}
.mt-lg {
  margin-top: variables.$spacing-lg;
}
.mb-sm {
  margin-bottom: variables.$spacing-sm;
}
.mb-md {
  margin-bottom: variables.$spacing-md;
}
.mb-lg {
  margin-bottom: variables.$spacing-lg;
}

.p-0 {
  padding: 0;
}
.pt-sm {
  padding-top: variables.$spacing-sm;
}
.pt-md {
  padding-top: variables.$spacing-md;
}
.pt-lg {
  padding-top: variables.$spacing-lg;
}
.pb-sm {
  padding-bottom: variables.$spacing-sm;
}
.pb-md {
  padding-bottom: variables.$spacing-md;
}
.pb-lg {
  padding-bottom: variables.$spacing-lg;
}

// Screen reader only
.sr-only {
  @include mixins.visually-hidden;
}
