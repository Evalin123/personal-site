@use '../variables';
@use '../mixins';

.header {
  display: flex;
  flex-direction: column;
  border-bottom: var(--border-width) solid var(--border-color);
  box-shadow: var(--shadow-outset);
  font-family: var(--font-family-base);
  /* Define header height for mobile menu positioning */

  /* Ensure header stays above mobile menu */
  position: relative;
  z-index: 1001;

  /* Theme transition */
  transition:
    background-color variables.$transition-normal,
    border-color variables.$transition-normal,
    box-shadow variables.$transition-normal;

  &__top-bar {
    display: flex;
    background: #bfc4f2;
    background: linear-gradient(
      90deg,
      rgba(191, 196, 242, 1) 0%,
      rgba(255, 196, 202, 1) 50%,
      rgba(255, 255, 176, 1) 100%
    );
    justify-content: flex-end;
    padding: var(--space-xs) var(--space-md);
    border-bottom: var(--border-width) solid var(--border-color);
  }

  &__bottom-bar {
    display: grid;
    background: var(--color-gray-light);
    grid-template-columns: auto 1fr auto auto auto;
    align-items: center;
    gap: var(--space-sm);
    padding: var(--space-sm) var(--space-md);

    @media (max-width: #{variables.$breakpoint-md - 5px}) {
      grid-template-columns: auto 1fr auto;
    }
  }

  &__logo {
    font-weight: 700;
    letter-spacing: 2px;
  }

  &__nav {
    display: inline-flex;
    gap: var(--space-sm);
    justify-self: center;

    @media (min-width: variables.$breakpoint-md) {
      justify-content: flex-start;
      margin-left: variables.$spacing-2xl;
    }

    @media (max-width: #{variables.$breakpoint-md - 1px}) {
      display: none;
    }
  }

  &__nav-item {
    padding: var(--space-xs) var(--space-md);
    border: var(--border-width) solid var(--border-color);
    background: var(--color-gray);
    box-shadow: var(--shadow-outset);
    cursor: pointer;

    &:hover {
      box-shadow: var(--shadow-inset);
    }
  }

  &__nav-underline {
    text-decoration: underline;
  }

  &__window-controls {
    display: inline-flex;
    gap: var(--space-xs);
  }

  &__ctrl-btn {
    width: 28px;
    height: 28px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: var(--border-width) solid var(--border-color);
    background: var(--color-gray);
    box-shadow: var(--shadow-outset);
    font-weight: 600;

    &:hover {
      box-shadow: var(--shadow-inset);
    }
  }

  &__mobile-toggle {
    display: none;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border: var(--border-width) solid var(--border-color);
    background: var(--color-gray);
    box-shadow: var(--shadow-outset);
    font-weight: 700;
    cursor: pointer;
    position: relative;
    justify-self: end; // 靠右對齊

    &:hover {
      box-shadow: var(--shadow-inset);
    }

    @include mixins.focus-visible;

    @media (max-width: #{variables.$breakpoint-md - 1px}) {
      display: flex;
    }
  }

  &__hamburger {
    position: relative;
    width: 20px;
    height: 14px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    span {
      display: block;
      height: 2px;
      width: 80%;
      background-color: var(--color-gray-dark);
      border-radius: 1px;
      transition: all variables.$transition-normal;
      transform-origin: center;
    }

    &--open {
      span:nth-child(1) {
        transform: rotate(45deg) translate(4px, 4px);
      }

      span:nth-child(2) {
        opacity: 0;
        transform: scale(0);
      }

      span:nth-child(3) {
        transform: rotate(-45deg) translate(4px, -4px);
      }
    }
  }

  &__mobile-overlay {
    position: fixed;
    top: 88px;
    left: 0;
    right: 0;
    width: 100vw;
    height: 100vh;
    padding: var(--space-md);
    background: var(--color-gray-light);
    z-index: 1000;
    display: flex;
    flex-direction: column;
    transition: all variables.$transition-normal ease-out; // 250ms 平滑動畫
    transform: translateY(-100vh);
    opacity: 0;
    pointer-events: none;

    &--open {
      transform: translateY(0);
      opacity: 1;
      pointer-events: auto;
    }

    @media (min-width: variables.$breakpoint-md) {
      display: none;
    }
  }

  &__aux-actions {
    display: inline-flex;
    gap: var(--space-sm);

    @media (min-width: variables.$breakpoint-md) {
      gap: variables.$spacing-md;
    }

    @media (max-width: #{variables.$breakpoint-md - 1px}) {
      display: none;
    }
  }

  &__mobile-nav {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
    width: 100%;
    max-width: 760px;
    align-items: center;
  }

  &__mobile-nav-item {
    display: block;
    text-align: center;
    padding: var(--space-lg) var(--space-md);
    border: var(--border-width) solid var(--border-color);
    background: var(--color-gray);
    box-shadow: var(--shadow-outset);
    font-size: 1.4em;
    font-weight: 600;
    width: 100%;
    min-width: 200px;

    &:hover {
      box-shadow: var(--shadow-inset);
    }

    @media (max-width: var(--breakpoint-md)) {
      position: relative;

      &:focus,
      &:active {
        box-shadow: var(--shadow-inset);
      }
    }
  }

  &__divider {
    height: 0;
    border-top: var(--border-width) solid var(--border-color);
    margin: var(--space-lg) 0;
    width: 100%;
  }

  &__mobile-actions {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
    width: 100%;
    max-width: 760px;
    align-items: center;

    button {
      width: 100%;
      min-width: 150px;
    }

    .header__theme-button {
      width: 100%;

      .theme-switcher {
        width: 100%;
        min-width: 150px;
        justify-content: center;
      }
    }

    .header__language-button {
      width: 100%;

      .language-switcher {
        width: 100%;
        min-width: 150px;
        justify-content: center;
      }
    }
  }

  // Desktop container styles for action buttons
  &__theme-button {
    position: relative;
    transition: all variables.$transition-normal;

    &:hover {
      transform: scale(1.05);
    }

    .theme-switcher:hover {
      transform: none;
      box-shadow: var(--shadow-inset);
    }

    .theme-switcher:active {
      transform: translate(1px, 1px);
    }
  }

  &__language-button {
    position: relative;
    transition: all variables.$transition-normal;

    &:hover {
      transform: scale(1.05);
    }

    .language-switcher:hover {
      transform: none;
      box-shadow: var(--shadow-inset);
    }

    .language-switcher:active {
      transform: translate(1px, 1px);
    }
  }
}
