@use 'variables';

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: variables.$breakpoint-sm) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: variables.$breakpoint-md) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: variables.$breakpoint-lg) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: variables.$breakpoint-xl) {
      @content;
    }
  }
  @if $breakpoint == 2xl {
    @media (min-width: variables.$breakpoint-2xl) {
      @content;
    }
  }
}

// Container mixin
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 variables.$spacing-md;

  @include respond-to(md) {
    padding: 0 variables.$spacing-lg;
  }
}

// Button base styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: variables.$spacing-sm variables.$spacing-md;
  border: none;
  border-radius: variables.$border-radius-md;
  font-family: variables.$font-family-sans;
  font-size: variables.$font-size-base;
  font-weight: variables.$font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all variables.$transition-fast;
  user-select: none;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// Primary button
@mixin button-primary {
  @include button-base;
  background-color: var(--color-primary);
  color: white;

  &:hover:not(:disabled) {
    background-color: var(--color-primary-hover);
  }

  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// Ghost button
@mixin button-ghost {
  @include button-base;
  background-color: transparent;
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);

  &:hover:not(:disabled) {
    background-color: var(--color-bg-secondary);
  }

  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// Card styles
@mixin card {
  background-color: var(--color-bg-primary);
  border: 1px solid var(--color-border);
  border-radius: variables.$border-radius-lg;
  box-shadow: 0 1px 3px var(--color-shadow);
  transition: box-shadow variables.$transition-normal;

  &:hover {
    box-shadow: 0 4px 12px var(--color-shadow);
  }
}

// Text truncation
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Focus styles
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}
